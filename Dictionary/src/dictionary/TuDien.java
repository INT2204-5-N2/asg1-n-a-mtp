/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dictionary;

import com.sun.speech.freetts.Voice;
import com.sun.speech.freetts.VoiceManager;
import xuly.IOFile;
import java.awt.Color;
import java.awt.event.ActionEvent;
import static java.lang.System.exit;
import java.util.Set;
import javax.swing.Action;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.ListModel;
import javax.swing.JFrame;
import java.io.*;
import static dictionary.translate.translate;
import java.awt.FlowLayout;
import static java.awt.Frame.NORMAL;
import java.awt.GridLayout;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;

import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JScrollBar;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author THE TESSEN Hoàng Phi
 */
public class TuDien extends javax.swing.JFrame {

    /**
     * Creates new form TuDien
     */
    private TreeMap<String, String> listW;
    private IOFile file;
    DefaultListModel<String> model = new DefaultListModel<>();

    public TuDien() {
        
        file= new IOFile();
        listW =  file.docTu("data1.DAT");     
        setLocation(370,150);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jTextField1 = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        btSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        btModify = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        btAdd = new javax.swing.JButton();
        btExit = new javax.swing.JButton();
        tfSearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btspeak = new javax.swing.JButton();
        rbOff = new javax.swing.JRadioButton();
        rbOn = new javax.swing.JRadioButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("T-P Dictionary");
        setBackground(new java.awt.Color(51, 255, 153));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setSize(new java.awt.Dimension(650, 358));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));
        jDesktopPane1.setForeground(new java.awt.Color(0, 255, 204));

        btSearch.setBackground(new java.awt.Color(255, 255, 0));
        btSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btSearch.setForeground(new java.awt.Color(153, 0, 153));
        btSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/tìm.png"))); // NOI18N
        btSearch.setMnemonic('S');
        btSearch.setText("Search");
        btSearch.setToolTipText("Tìm kiếm một từ và các từ gần giống trong từ điển");
        btSearch.setName(""); // NOI18N
        btSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btSearchMouseExited(evt);
            }
        });
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        jList1.setBackground(new java.awt.Color(0, 153, 255));
        jList1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jList1.setForeground(new java.awt.Color(255, 255, 255));
        jList1.setToolTipText("");
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jList1.setDropMode(javax.swing.DropMode.ON);
        jList1.setRequestFocusEnabled(false);
        jList1.setSelectedIndices(new int[] {0});

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jList1, org.jdesktop.beansbinding.ObjectProperty.create(), jList1, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        btModify.setBackground(new java.awt.Color(255, 255, 0));
        btModify.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btModify.setForeground(new java.awt.Color(153, 0, 153));
        btModify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/sửa.png"))); // NOI18N
        btModify.setMnemonic('M');
        btModify.setText("Modify");
        btModify.setToolTipText("Sửa một từ đã có trong từ điển");
        btModify.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btModifyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btModifyMouseExited(evt);
            }
        });
        btModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModifyActionPerformed(evt);
            }
        });

        btDelete.setBackground(new java.awt.Color(255, 255, 0));
        btDelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btDelete.setForeground(new java.awt.Color(153, 0, 153));
        btDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/xóa.png"))); // NOI18N
        btDelete.setMnemonic('D');
        btDelete.setText("Delete");
        btDelete.setToolTipText("Xóa một từ đã có trong từ điển");
        btDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btDeleteMouseExited(evt);
            }
        });
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        btAdd.setBackground(new java.awt.Color(255, 255, 0));
        btAdd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btAdd.setForeground(new java.awt.Color(153, 0, 153));
        btAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/thêm.png"))); // NOI18N
        btAdd.setMnemonic('A');
        btAdd.setText("   Add");
        btAdd.setToolTipText("Thêm một từ mới vào từ điển");
        btAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btAddMouseExited(evt);
            }
        });
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btExit.setBackground(new java.awt.Color(255, 255, 0));
        btExit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btExit.setForeground(new java.awt.Color(153, 0, 153));
        btExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/thoát.png"))); // NOI18N
        btExit.setMnemonic('E');
        btExit.setText("  Exit");
        btExit.setToolTipText("Thoát khỏi ứng dụng");
        btExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btExitMouseExited(evt);
            }
        });
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });

        tfSearch.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tfSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfSearchMouseClicked(evt);
            }
        });
        tfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchActionPerformed(evt);
            }
        });
        tfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfSearchKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfSearchKeyTyped(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(255, 255, 233));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        btspeak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/loa.png"))); // NOI18N
        btspeak.setToolTipText("Phát âm");
        btspeak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btspeakActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbOff);
        rbOff.setSelected(true);
        rbOff.setText("Từ điển offline");

        buttonGroup1.add(rbOn);
        rbOn.setText("Sử dụng API");

        jDesktopPane1.setLayer(btSearch, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btModify, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btDelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btAdd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btExit, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(tfSearch, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btspeak, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(rbOff, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(rbOn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btModify, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(rbOff)
                                .addGap(39, 39, 39)
                                .addComponent(rbOn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btspeak, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbOff)
                            .addComponent(rbOn))
                        .addGap(7, 7, 7)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btSearch))
                        .addGap(7, 7, 7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(btspeak, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btModify)
                        .addGap(41, 41, 41)
                        .addComponent(btAdd)
                        .addGap(43, 43, 43)
                        .addComponent(btDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(btExit))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*Ham kiem tra ket noi internet*/
    private static boolean checkAvailable() {
        // kiểm tra kết nối .nguồn : https://code.i-harness.com/en/q/156495
         try {
            final URL url = new URL("http://www.google.com");
            final URLConnection conn = url.openConnection();
            conn.connect();
            conn.getInputStream().close();
            return true;
        }catch (MalformedURLException e) {
               throw new RuntimeException(e);
        } catch (IOException e) {
                return false;
         }
    }
    private void tfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchActionPerformed
        // TODO add your handling code here:
        if(rbOn.isSelected()){   
            if(checkAvailable()) {
                if(!tfSearch.getText().trim().equals(""))
                {
                    jTextArea1.setText("");
                         try {                
                            jTextArea1.setText(translate("en", "vi",tfSearch.getText().trim()) );
                        } catch (IOException ex) {
                        Logger.getLogger(TuDien.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else  JOptionPane.showMessageDialog(null, "Bạn phải nhập từ vào ô tìm kiếm","Error",NORMAL);
            }
            else {
             JOptionPane.showMessageDialog(null,"Bạn kiểm tra kết nối đi <3 !!");       
            }  
                } 
        else if(rbOff.isSelected()){
                    if(!tfSearch.getText().trim().equals(""))
                    {
                        jTextArea1.setText("");
                        if(listW.get(tfSearch.getText().trim())==null)
                        JOptionPane.showMessageDialog(null, "Xin lỗi, không tìm thấy từ bạn vừa nhập");
                        else               
                            jTextArea1.setText(listW.get(tfSearch.getText().trim()));                  
                    }
                    else  JOptionPane.showMessageDialog(null, "Bạn phải nhập từ vào ô tìm kiếm","Error",NORMAL);
                }
    }//GEN-LAST:event_tfSearchActionPerformed

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        // TODO add your handling code here:
        int click = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn thoát", "Exit", JOptionPane.YES_NO_OPTION);
        if (click == JOptionPane.YES_OPTION) {
            System.exit(1);
        }
    }//GEN-LAST:event_btExitActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        // TODO add your handling code here:
        boolean check = false;
        model.removeAllElements();
        if (!tfSearch.getText().equals("")) {
            jTextArea1.setText("");
            Set<String> keySet = listW.keySet();
            for (String i : keySet) {
                if (i.contains(tfSearch.getText().toLowerCase())) {
                    model.addElement(i);
                    check = true;
                }
            }
            JScrollBar sb = jScrollPane1.getVerticalScrollBar();
            sb.setValue(0);
            if (!check) {
                JOptionPane.showMessageDialog(null, "Không tìm thấy từ bạn vừa nhập");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Bạn phải nhập từ vào ô tìm kiếm", "Error", NORMAL);
        }

    }//GEN-LAST:event_btSearchActionPerformed

    private void btModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModifyActionPerformed
        // TODO add your handling code here:
        String fix_Word = null;
        String meaning = null;
        try {
            do {
                fix_Word = JOptionPane.showInputDialog(null, "Nhập từ cần sửa", "Modify", WIDTH);
                if (fix_Word.equals("")) {
                    JOptionPane.showMessageDialog(null, "Bạn chưa nhập từ", "Error", NORMAL);
                }
            } while (fix_Word.equals(""));
            if (listW.get(fix_Word.toLowerCase().trim()) == null) {
                JOptionPane.showMessageDialog(null, "Từ điển không có từ bạn vừa nhập", "Error", NORMAL);
            } else {
                do {
                    meaning = JOptionPane.showInputDialog(null, "Nhập nghĩa mới", "Modify", WIDTH);
                    if (meaning.equals("")) {
                        JOptionPane.showMessageDialog(null, "Bạn chưa nhập nghĩa", "Error", NORMAL);
                    }
                } while (meaning.equals(""));
                listW.replace(fix_Word.trim().toLowerCase(), meaning);
                file.ghiTu(listW,"data1.dat");
                JOptionPane.showMessageDialog(null,"Bàn đã sửa từ thành công!","Message",JOptionPane.OK_OPTION);                
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btModifyActionPerformed
    public void a(String a) {

    }
    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // TODO add your handling code here:
        // Them them = new Them();
        JFrame frame = new JFrame("Add Word");
        frame.setSize(300, 200);
        frame.setLocationRelativeTo(this);
        frame.setLayout(new GridLayout(3, 1));
        frame.setVisible(true);
        frame.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        JPanel pnEnglishWord = new JPanel();
        frame.add(pnEnglishWord);
        pnEnglishWord.setLayout(new FlowLayout(FlowLayout.LEFT));
        JLabel lbEngWord = new JLabel("English Word");
        JTextField txtEngWord = new JTextField(20);
        pnEnglishWord.add(lbEngWord);
        pnEnglishWord.add(txtEngWord);

        JPanel pnMeanWord = new JPanel();
        frame.add(pnMeanWord);
        pnMeanWord.setLayout(new FlowLayout(FlowLayout.LEFT));
        JLabel lbMeanWord = new JLabel("Mean Word");
        JTextField txtMeanWord = new JTextField(20);
        lbMeanWord.setPreferredSize(lbEngWord.getPreferredSize());
        pnMeanWord.add(lbMeanWord);
        pnMeanWord.add(txtMeanWord);

        JPanel pnButton = new JPanel();
        frame.add(pnButton);
        JButton btnOK = new JButton("OK");
        JButton btnCancel = new JButton("Cancel");
        btnOK.setBounds(80, 80, 80, 80);
        pnButton.add(btnOK);
        pnButton.add(btnCancel);
        btnOK.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (txtEngWord.getText().trim().equals("") || txtMeanWord.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(null, "Bạn phải nhập từ và nghĩa", "Error", NORMAL);
                }
                if (listW.get(txtEngWord.getText().toLowerCase().trim()) != null) {
                    JOptionPane.showMessageDialog(null, "Từ điển đã có từ bạn vừa nhập", "Error", NORMAL);
                } else if (!txtEngWord.getText().trim().equals("") && !txtMeanWord.getText().trim().equals("")) {
                    listW.put(txtEngWord.getText().toLowerCase().trim(), txtMeanWord.getText().toLowerCase().trim());
                    file.ghiTu(listW,"data1.DAT");
                    JOptionPane.showMessageDialog(null, "Bàn đã thêm từ thành công!", "Message", JOptionPane.YES_OPTION);
                    docList(listW);
                    JScrollBar sb = jScrollPane1.getVerticalScrollBar();
                    sb.setValue(0);
                    frame.setVisible(false);

                }

            }
        });
        btnCancel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                frame.setVisible(false);
            }
        });

    }//GEN-LAST:event_btAddActionPerformed

    private void tfSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfSearchMouseClicked
        // TODO add your handling code here:      
        jList1.setSelectedIndex(1);
        docList(listW);
        tfSearch.setText("");
        jTextArea1.setText("");
        JScrollBar sb = jScrollPane1.getVerticalScrollBar();
        sb.setValue(0);     
    }//GEN-LAST:event_tfSearchMouseClicked

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        // TODO add your handling code here:
        String delete_Word = null;
        try {
            do {
                delete_Word = JOptionPane.showInputDialog(null, "Nhập từ cần xóa", "Delete", WIDTH);
                if (delete_Word.equals("")) {
                    JOptionPane.showMessageDialog(null, "Bạn chưa nhập từ", "Error", NORMAL);
                }
            } while (delete_Word.equals(""));
            if (listW.get(delete_Word.toLowerCase().trim()) == null) {
                JOptionPane.showMessageDialog(null, "Từ điển không có từ bạn vừa nhập", "Error", NORMAL);
            } else {
                listW.remove(delete_Word.trim().toLowerCase());
                file.ghiTu(listW,"data1.DAT");
                JOptionPane.showMessageDialog(null, "Bàn đã xóa từ thành công!", "Message", JOptionPane.YES_OPTION);    
                model.removeElement(delete_Word);
                JScrollBar sb = jScrollPane1.getVerticalScrollBar();
                sb.setValue(0);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btDeleteActionPerformed
    
    private void btspeakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btspeakActionPerformed
        // TODO add your handling code here:
        Voice voice;
        VoiceManager vm = VoiceManager.getInstance();
       System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory"); 
       voice = vm.getVoice("kevin16");
        voice.allocate();
        try {
            voice.speak(tfSearch.getText());
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btspeakActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        if (!jList1.isSelectionEmpty()) {
            String tu;
            tu = jList1.getSelectedValue();
                tfSearch.setText(tu);
                jTextArea1.setText(listW.get(tu));
        }
    }//GEN-LAST:event_jList1ValueChanged
    private void docList(TreeMap<String, String> listW) {
        model.removeAllElements();
        jList1.setModel(model);
        Set<String> keySet = listW.keySet();
        for (String i : keySet) {
            model.addElement(i);
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here: đưa từ vào list
        docList(listW);
        //jList1.setSelectedIndex(0);  
    }//GEN-LAST:event_formWindowOpened

    private void tfSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyTyped
        // TODO add your handling code here:
        String text = tfSearch.getText().trim();
        text += evt.getKeyChar(); // đọc kí tự sự kiện nhập
        text = text.trim().toLowerCase();

        for (int i = 0; i < model.size(); i++) {
            String val = "" + model.getElementAt(i);
            val = val.toLowerCase();
            if (val.startsWith(text)) { // startWith kiểm tra tiền tố ví dụ java swing có ja => true, jav => true..
                JScrollBar sb = jScrollPane1.getVerticalScrollBar(); // chạy scrollpane xuống từ chữ cái đầu
                sb.setValue(i * 20);
                return;
            }
        }
        // jTextArea1.setText("Không tìm thấy từ bạn nhập !!!");
        /* detail : https://www.youtube.com/watch?v=UR76LaV4wRA */
    }//GEN-LAST:event_tfSearchKeyTyped
    // hover button
    private void btSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSearchMouseEntered
        // TODO add your handling code here:
        btSearch.setBackground(Color.WHITE);
    }//GEN-LAST:event_btSearchMouseEntered

    private void btSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSearchMouseExited
        // TODO add your handling code here:
        btSearch.setBackground(Color.YELLOW);
    }//GEN-LAST:event_btSearchMouseExited

    private void btModifyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btModifyMouseEntered
        // TODO add your handling code here:
        btModify.setBackground(Color.WHITE);
    }//GEN-LAST:event_btModifyMouseEntered

    private void btModifyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btModifyMouseExited
        // TODO add your handling code here:
        btModify.setBackground(Color.YELLOW);
    }//GEN-LAST:event_btModifyMouseExited

    private void btAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAddMouseEntered
        // TODO add your handling code here:
        btAdd.setBackground(Color.WHITE);
    }//GEN-LAST:event_btAddMouseEntered

    private void btAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAddMouseExited
        // TODO add your handling code here:
        btAdd.setBackground(Color.YELLOW);
    }//GEN-LAST:event_btAddMouseExited

    private void btDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDeleteMouseEntered
        // TODO add your handling code here:
        btDelete.setBackground(Color.WHITE);
    }//GEN-LAST:event_btDeleteMouseEntered

    private void btDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDeleteMouseExited
        // TODO add your handling code here:
        btDelete.setBackground(Color.YELLOW);
    }//GEN-LAST:event_btDeleteMouseExited

    private void btExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btExitMouseEntered
        // TODO add your handling code here:
        btExit.setBackground(Color.WHITE);
    }//GEN-LAST:event_btExitMouseEntered

    private void btExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btExitMouseExited
        // TODO add your handling code here:
        btExit.setBackground(Color.YELLOW);
    }//GEN-LAST:event_btExitMouseExited
    int checkkey=1;
    private void tfSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_CONTROL) checkkey=2;
        if(evt.getKeyCode()==KeyEvent.VK_R&&checkkey==2)   checkkey=3;
        if(checkkey==3){
            int click=JOptionPane.showConfirmDialog(null, "Bạn có muốn reset lại từ điển", "Chức năng ẩn", JOptionPane.YES_NO_OPTION);
             checkkey=1;
             if(click==JOptionPane.YES_OPTION){
                 TreeMap<String ,String> listWR=file.docTu("data.DAT");
                 file.ghiTu(listWR,"data1.DAT");
                JOptionPane.showMessageDialog(null,"Đã reset từ điển,xin thoát ra để cập nhật lại","Message",JOptionPane.OK_OPTION);
             };
         }
        if(evt.getKeyCode()==KeyEvent.VK_P && checkkey==2)   checkkey=4;
        if(checkkey==4){
            checkkey=1;
            Practice practice = new Practice();
            jDesktopPane1.add(practice);
            practice.show();
        }
    }//GEN-LAST:event_tfSearchKeyPressed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TuDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TuDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TuDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TuDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            @Override
//            public void run() {
//                new TuDien().setVisible(true);
//            }
//        });
        new TuDien().setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btExit;
    private javax.swing.JButton btModify;
    private javax.swing.JButton btSearch;
    private javax.swing.JButton btspeak;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton rbOff;
    private javax.swing.JRadioButton rbOn;
    private javax.swing.JTextField tfSearch;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    

}
